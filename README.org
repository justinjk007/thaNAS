* [[file:/ssh:kaipada@192.168.0.10:~/][thaNAS]] 
#+html: <a href="https://badges.pufler.dev"><img alt="Last updated date" src="https://badges.pufler.dev/updated/justinjk007/thaNAS" align="right"/></a>

#+CAPTION: Purple bad guy saying I am inevitable
#+html: <p align="center"><img src="fluff/MrPurple.gif" /></p>

Home NAS / Plex media server setup.
- Server setup using ansible
- Setup docker containers for all services and isolated VPN for transmission

** Setting up ansible

#+begin_src sh
pip install ansible
pip install passlib
#+end_src

Set up the server list to play on
file:./ansible_hosts.conf

Check inventory after setting up file
#+begin_src sh
sudo mkdir /etc/ansible
sudo ln -s ~/Repos/Notes/thaNAS/ansible_hosts.conf /etc/ansible/hosts
ansible-inventory --list -y

# or specify inventory
ansible-inventory -i ansible_hosts.conf --list -y
#+end_src

** Test connection

Add public key to the server as root and then test out connection

Tries to ssh as root in this case
#+begin_src sh
ansible all -m ping -u root
# or
ansible all -m ping -u root --ask-pass
#+end_src

** Vault to store passwords

file:ansible_vault_password.txt --> vault password
file:ansible_vault.yml --> Put passwords here

#+begin_src sh
cd ~/Repos/thaNAS/
ansible-vault create ansible_vault.yml
ansible-vault decrypt --vault-password-file=ansible_vault_password.txt ansible_vault.yml
ansible-vault encrypt --vault-password-file=ansible_vault_password.txt ansible_vault.yml
#+end_src

** Set VPN password in the vault

file:ansible_vault.yml --> Put passwords here

#+begin_src yml
password: server_password_we_wanna_set
OPENVPN_USERNAME: sdsdsijsldijij
OPENVPN_PASSWORD: sdopksdpjsdpsijpass
PASSWORD_7Z: password used when backing up config files
#+end_src

** Execute the playbook

#+begin_src sh
ansible-playbook setup_thaNAS_playbook.yml -i ansible_hosts.conf --vault-pass-file ansible_vault_password.txt
ansible-playbook setup_thaNAS_playbook.yml -i ansible_hosts.conf --vault-pass-file ansible_vault_password.txt --tags transmission
#+end_src

** Bring the docker containers up manually now that server is setup

Create everything
#+begin_src sh
cd ~/plex
# likley problematic one so run it alone to fix it if need be because this container also holds the VPN info
docker-compose up transmission

docker-compose up # run all the services we just set up

# run as deamon FOREVAAAAAA
docker-compose up -d
#+end_src

** Web config

file:/ssh:kaipada@192.168.0.10:/mnt/data

- Transmission      ==> http://192.168.0.10:9091
- Jackett           ==> http://192.168.0.10:9117
- Radarr            ==> http://192.168.0.10:7878
- Sonarr            ==> http://192.168.0.10:8989
- Plex(After setup) ==> http://192.168.0.10:32400/web

Plex ssh tunneling, ssh like this first then the URL below will start to work, once we login in and setup stuff the normal URL above will work
#+begin_src sh
ssh -L32400:localhost:32400 kaipada@192.168.0.10
#+end_src

- Plex         ==> http://localhost:32400/web

See more detailed write up: file:fluff/DetailedWriteUp.md

** Setup dropbox uploader to backup config

https://github.com/andreafabrizi/Dropbox-Uploader

Run
#+begin_src sh
~/plex/dropbox_uploader.sh
#+end_src

** Updating the containers from time to time

#+begin_src sh
cd ~/plex # go to the directory with the docker-compose file
docker-compose pull # pull new images
docker-compose up -d # bring up new images
#+end_src

** Setup Plex Trakt Sync

https://github.com/Taxel/PlexTraktSync#setup

Run
#+begin_src sh
cd ~/plex/PlexTraktSync-0.8.16
python3 main.py
#+end_src

** R-syncing stuff to backup drive

#+begin_src sh
lsblk -f # get disk information and device name
sudo mkdir /media/kaipada/My_passport
sudo mount /dev/sdb1 /media/kaipada/My_passport

rsync -azvv --progress /home/kaipada/media/movies/* /media/kaipada/My_passport/movies
sleep 120s
rsync -azvv --progress /home/kaipada/media/tv/* /media/kaipada/My_passport/tv
#+end_src

** Notes

Change entire season audio track easily: https://www.pastatool.com/
  - Make sure to turn off VPN before connecting to it
